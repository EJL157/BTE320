{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMUjwPxdMcenSlorxJIIZO9",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/EJL157/BTE320/blob/main/BTE320_New_RPS\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pi = 3.14\n",
        "r = 5\n",
        "Area = pi * r ** 2\n",
        "print(\"Area is\", Area, \"square feet.\", sep=\"\",end=\"\")\n",
        "#Can include \"end = ' '\" to change what happens between lines, change from new line to same line with a space, new line would be '\\n'\n",
        "print(\"Area is %.1f square feet\" % Area,end=\"\\n\\n\")\n",
        "#dynamic return of the Area variable\n",
        "print(\"Area is {} square feet\".format(Area))\n",
        "#dynamic return of the Area variable with .format(Area), which pulls Area value into place of {}\n",
        "print(f\"Area is {Area} square feet\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "McXHiqzhCi1o",
        "outputId": "73f1ed6e-a12f-4863-bd51-831abf2e1943"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Area is78.5square feet.Area is 78.5 square feet\n",
            "\n",
            "Area is 78.5 square feet\n",
            "Area is 78.5 square feet\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "h = 10\n",
        "r = 3\n",
        "pi = 3.14\n",
        "'''\n",
        "First line\n",
        "Second line\n",
        "Third line\n",
        "'''\n",
        "S = 2*pi*r**2 + 2*pi*r*h\n",
        "print(S)\n",
        "#Sets height, radius, and pi values, then calculates and prints surface area"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 54
        },
        "id": "kD85onAnCzpz",
        "outputId": "2e8e95c3-7f65-4748-f657-7dd975b93f6b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "244.92000000000002\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'\\nFirst line\\nSecond line\\nThird line\\n'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pi = 3.14\n",
        "r = float(input(\"Provide a value for the radius (in ft): \"))\n",
        "c = float(input(\"Provide a value for side (in ft): \"))\n",
        "h = float(input(\"Provide a value for height (in ft): \"))\n",
        "#Input by defualt returns a string, add float to fix\n",
        "shape = 'triangle'\n",
        "if shape == 'circle':\n",
        "  Area = pi * r ** 2\n",
        "  print(f\"Area is {Area} square feet\")\n",
        "elif shape == 'square':\n",
        "  Area = c ** 2\n",
        "  print(f\"Area is {Area} square feet\")\n",
        "elif shape == 'triangle':\n",
        "  Area = .5 * c * h\n",
        "  print(f'Area is {Area} square feet')\n",
        "else:\n",
        "  print(\"Invalid shape\")\n",
        "print('Program ends.')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wJ7uUX_oeEBJ",
        "outputId": "448d8c2b-2f0d-414b-b98a-f946e55f9d43"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Provide a value for the radius (in ft): 8\n",
            "Provide a value for side (in ft): 4\n",
            "Provide a value for height (in ft): 4\n",
            "Area is 8.0 square feet\n",
            "Program ends.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "grade = 90\n",
        "if grade > 96:\n",
        "  print(\"A+\")\n",
        "elif grade >= 93:\n",
        "  Print(\"A\")\n",
        "elif grade >= 90:\n",
        "  print(\"A-\")\n",
        "else:\n",
        "  print (\"No A earned\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tnO4mQ8Wg1-a",
        "outputId": "0089f6af-a909-4930-f5eb-8b2c186a4632"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "A-\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "amount = float(input('Give initial amount ($): '))\n",
        "n_years = float(input('Give number of years of investment: '))\n",
        "customer_type = input(\"Type of customer (n->new, e->existing): \")\n",
        "\n",
        "if amount > 10000 and customer_type == 'e':\n",
        "  rate = 0.035\n",
        "elif amount > 1000 and customer_type == 'e':\n",
        "  rate = 0.0325\n",
        "elif customer_type = 'e':\n",
        "  rate = 0.03\n",
        "else:\n",
        "  rate = 0.04\n",
        "return_amount = (1 + rate) ** n_years * amount\n",
        "print(f\"Return amount is ${return_amount}.\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-MeN1WMQhC7H",
        "outputId": "55401f8f-2af4-4ab6-8928-97f3bffe6140"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Give initial amount ($): 1000\n",
            "Give number of years of investment: 5\n",
            "Return amount is $1159.2740743000002.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import random\n",
        "Game = input(\"Do you want to play a game? \").capitalize()\n",
        "while(Game == 'Yes'):\n",
        "  Person1 = input(\"Person 1 - Rock, Paper, or Scissors: \").capitalize()\n",
        "  Person2 = random.choice(['Rock', 'Paper', 'Scissors'])\n",
        "  if(Person1 == Person2):\n",
        "    print(\"Draw\")\n",
        "  elif ((Person1 == 'Rock' and Person2 == 'Scissors')\n",
        "        or (Person1 == 'Scissors' and Person2 == 'Paper')\n",
        "        or (Person1 == 'Paper' and Person2 == 'Rock')):\n",
        "    print(\"Person 1 wins\")\n",
        "  else:\n",
        "    print(\"Person 2 wins\")\n",
        "  Game = input(\"Do you want to play a game? \").capitalize()\n"
      ],
      "metadata": {
        "id": "x8njAGD0Las8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "num1 = float(input(\"What is your first number: \"))\n",
        "num2 = float(input(\"What is your second number: \"))\n",
        "operation = input(\"What symbol would you like: \")\n",
        "if operation == '+':\n",
        "  print(num1 + num2)\n",
        "elif operation == '-':\n",
        "  print(num1-num2)\n",
        "elif operation == '*':\n",
        "  print(num1*num2)\n",
        "elif operation == '/':\n",
        "  print(num1/num2)\n",
        "elif operation == '**':\n",
        "  print(num1**num2)\n",
        "else:\n",
        "  print(\"Invalid operation.\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uHxgS1WvXlMD",
        "outputId": "e3a2d6e8-5f59-41aa-9d56-e0896b70ef0c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "What is your first number: 10\n",
            "What is your second number: 5\n",
            "What symbol would you like: **\n",
            "100000.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#range(start, stop, step), all inputs must be integers\n",
        "\n",
        "for i in range(0,10,2):\n",
        "  print(i, end='')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZhZdm2u_c4ob",
        "outputId": "cb7df156-6457-4ff2-9f47-80f6c5fc1997"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "02468"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "i = 0\n",
        "while i < 10:\n",
        "  print(f'{i}', end = '')\n",
        "  i += 2"
      ],
      "metadata": {
        "id": "ECS4f5HSK93b"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}